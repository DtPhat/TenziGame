{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\Tenzi_Game\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Die from \"./components/Die\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n  const [hasTimerStarted, setHasTimerStarted] = React.useState(false);\n  const [timeSpent, setTimeSpent] = React.useState(0);\n  const [counter, setCounter] = React.useState(0);\n  const timeIntervalRef = React.useRef(0);\n  React.useEffect(() => {\n    const allHeld = dice.every(die => die.isHeld);\n    const firstValue = dice[0].value;\n    const allSameValue = dice.every(die => die.value === firstValue);\n\n    if (allHeld && allSameValue) {\n      clearInterval(timeIntervalRef.current);\n      setHasTimerStarted(false);\n      setTenzies(true);\n    }\n  }, [dice]);\n\n  function generateNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid()\n    };\n  }\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateNewDie());\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    if (!tenzies) {\n      setDice(oldDice => oldDice.map(die => {\n        return die.isHeld ? die : generateNewDie();\n      }));\n      hasTimerStarted && setCounter(prevRoll => prevRoll + 1);\n    } else {\n      setTenzies(false);\n      setDice(allNewDice());\n      setTimeSpent(0);\n      setCounter(0);\n    }\n  }\n\n  function holdDice(id) {\n    if (!hasTimerStarted) {\n      setHasTimerStarted(true);\n      timer();\n    }\n\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? { ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  }\n\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this));\n\n  function timer() {\n    timeIntervalRef.current = setInterval(() => {\n      setTimeSpent(prevTimeSpent => prevTimeSpent + 1);\n    }, 1000);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [tenzies && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-5xl m-0 text-blue-800 font-bold\",\n      children: \"Tenzi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"pt-2 font-inter font-medium \",\n      children: [\"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 154\n      }, this), \"The timer will start once a die has been held.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"extra-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"timer\",\n        children: [\"Time spent: \", timeSpent, \"s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"counter\",\n        children: [\"Roll counted: \", counter, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: tenzies ? \"New Game\" : \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"dDbd+/rzoBrIZhMceZ7EWBmdSPY=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Die","nanoid","Confetti","App","dice","setDice","useState","allNewDice","tenzies","setTenzies","hasTimerStarted","setHasTimerStarted","timeSpent","setTimeSpent","counter","setCounter","timeIntervalRef","useRef","useEffect","allHeld","every","die","isHeld","firstValue","value","allSameValue","clearInterval","current","generateNewDie","Math","ceil","random","id","newDice","i","push","rollDice","oldDice","map","prevRoll","holdDice","timer","diceElements","setInterval","prevTimeSpent"],"sources":["C:/React/Tenzi_Game/src/App.js"],"sourcesContent":["import React from \"react\"\r\nimport Die from \"./components/Die\"\r\nimport { nanoid } from \"nanoid\"\r\nimport Confetti from \"react-confetti\"\r\nexport default function App() {\r\n\r\n    const [dice, setDice] = React.useState(allNewDice())\r\n    const [tenzies, setTenzies] = React.useState(false)\r\n    const [hasTimerStarted, setHasTimerStarted] = React.useState(false);\r\n    const [timeSpent, setTimeSpent] = React.useState(0)\r\n    const [counter, setCounter] = React.useState(0)\r\n    const timeIntervalRef = React.useRef(0)\r\n\r\n    React.useEffect(() => {\r\n        const allHeld = dice.every(die => die.isHeld)\r\n        const firstValue = dice[0].value\r\n        const allSameValue = dice.every(die => die.value === firstValue)\r\n        if (allHeld && allSameValue) {\r\n            clearInterval(timeIntervalRef.current);\r\n            setHasTimerStarted(false);\r\n            setTenzies(true)\r\n        }\r\n    }, [dice])\r\n\r\n    function generateNewDie() {\r\n        return {\r\n            value: Math.ceil(Math.random() * 6),\r\n            isHeld: false,\r\n            id: nanoid()\r\n        }\r\n    }\r\n\r\n    function allNewDice() {\r\n        const newDice = []\r\n        for (let i = 0; i < 10; i++) {\r\n            newDice.push(generateNewDie())\r\n        }\r\n        return newDice\r\n    }\r\n\r\n    function rollDice() {\r\n        if (!tenzies) {\r\n            setDice(oldDice => oldDice.map(die => {\r\n                return die.isHeld ?\r\n                    die :\r\n                    generateNewDie()\r\n            }))\r\n            hasTimerStarted && setCounter(prevRoll => prevRoll + 1)\r\n        } else {\r\n            setTenzies(false)\r\n            setDice(allNewDice())\r\n            setTimeSpent(0);\r\n            setCounter(0)\r\n        }\r\n    }\r\n\r\n    function holdDice(id) {\r\n        if (!hasTimerStarted) {\r\n            setHasTimerStarted(true);\r\n            timer();\r\n        }\r\n\r\n\r\n        setDice(oldDice => oldDice.map(die => {\r\n            return die.id === id ?\r\n                { ...die, isHeld: !die.isHeld } :\r\n                die\r\n        }))\r\n    }\r\n\r\n    const diceElements = dice.map(die => (\r\n        <Die\r\n            key={die.id}\r\n            value={die.value}\r\n            isHeld={die.isHeld}\r\n            holdDice={() => holdDice(die.id)}\r\n        />\r\n    ))\r\n\r\n    function timer() {\r\n        timeIntervalRef.current = setInterval(() => {\r\n            setTimeSpent((prevTimeSpent) => prevTimeSpent + 1);\r\n        }, 1000);\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            {tenzies && <Confetti />}\r\n            <h1 className=\"text-5xl m-0 text-blue-800 font-bold\">Tenzi</h1>\r\n            <p className=\"pt-2 font-inter font-medium \">Roll until all dice are the same. Click each die to freeze it at its current value between rolls.<br />\r\n                The timer will start once a die has been held.\r\n            </p>\r\n            <p className=\"extra-info\">\r\n                <h3 className=\"timer\">Time spent: {timeSpent}s</h3>\r\n                <h3 className=\"counter\">Roll counted: {counter} </h3>\r\n            </p>\r\n            <div className=\"dice-container\">\r\n                {diceElements}\r\n            </div>\r\n            <button\r\n                className=\"roll-dice\"\r\n                onClick={rollDice}\r\n            >\r\n                {tenzies ? \"New Game\" : \"Roll\"}\r\n            </button>\r\n        </main>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}